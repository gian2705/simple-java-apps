package utils;

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import static java.util.stream.Collectors.groupingBy;

public class RandomNumberGenerator {

  private int limit;


  /**
   *
   * @return the limit set for RandomNumberGenerator
   */
  private int getLimit() {
    return limit;
  }

  /**
   * This sets the limit
   * @param limit the upper boundary value of the random numbers intended to be
   *             generated by the method <code>getRandomIntegers()</code>
   *             if limit is 9, random numbers are generated from 0 to 8
   *             limit should not exceed 16
   */
  public void setLimit(int limit) {
    this.limit = limit;
  }


  /**
   * This method is called after the limit is set, If the limit is not set unpredictable behaviours might be observed
   * It should be noted that the limit should not exceed 16
   * @return List of randomly generated integers ranging from 0 -> limit minus 1
   */
  public List<Integer> getRandomInteger(){
    return IntStream.range(0, getLimit()).boxed()
                    .collect(groupingBy(i -> Math.random()))
                    .values().stream().flatMap(Collection::stream)
                    .limit(30).collect(Collectors.toList());
  }
}
